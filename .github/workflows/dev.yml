# yaml-language-server: https://json.schemastore.org/github-action.json
name: CMake on a single platform

on:
  push:
    branches: [ "dev" ]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  RELEASE_VERSION: 0.1.0
  PACKAGE_NAME: nightly-0.1.0.${{github.run_number}}

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/ -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build & Zip Distribution
      working-directory: ${{github.workspace}}
      # Build your program with the given configuration
      run: | 
        cd ${{github.workspace}}
        make -j32
        mkdir ./dist
        tar -czf ${{github.workspace}}/dist/${{env.PACKAGE_NAME}}.tar.gz ./build/

    - name: BuildTest
      working-directory: ${{github.workspace}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: cmake -DCMAKE_BUILD_TYPE=Test ./ && make -j32

    - name: RunTest
      working-directory: ${{github.workspace}}
      run: ./build/frate
      
      
    - name: Upload artifacts
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.CI_TOKEN }}
        file: ${{github.workspace}}/dist/${{env.PACKAGE_NAME}}.tar.gz
        asset_name: frate.tar.gz
        tag: nightly-${{env.RELEASE_VERSION}}.${{github.run_number}}
        overwrite: false
        prerelease: true
        make_latest: true
        release_name: "Frate nightly-${{env.RELEASE_VERSION}}.${{github.run_number}}"
        body: "Frate nightly-${{env.RELEASE_VERSION}}.${{github.run_number}}" 
